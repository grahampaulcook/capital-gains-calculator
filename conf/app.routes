# microservice specific routes

## Non-Resident Calculation Routes
GET        /calculate-flat              controllers.nonresident.CalculatorController.calculateFlat(customerType: String, priorDisposal: String, annualExemptAmount: Option[Double], otherPropertiesAmt: Option[Double], isVulnerable: Option[String],currentIncome: Option[Double],personalAllowanceAmt: Option[Double],disposalValue: Double,disposalCosts: Double,acquisitionValueAmt: Double,acquisitionCostsAmt: Double,improvementsAmt: Double,reliefs: Double,allowableLossesAmt: Double,acquisitionDate: Option[String],disposalDate: Option[String],isClaimingPRR: Option[String],daysClaimed: Option[Double])
GET        /calculate-rebased           controllers.nonresident.CalculatorController.calculateRebased(customerType: String, priorDisposal: String, annualExemptAmount: Option[Double], otherPropertiesAmt: Option[Double], isVulnerable: Option[String],currentIncome: Option[Double],personalAllowanceAmt: Option[Double],disposalValue: Double,disposalCosts: Double,rebasedValue: Double,revaluationCost: Double,improvementsAmt: Double,reliefs: Double,allowableLossesAmt: Double,acquisitionDate: Option[String],disposalDate: Option[String],isClaimingPRR: Option[String],daysClaimedAfter: Option[Double])
GET        /calculate-time-apportioned  controllers.nonresident.CalculatorController.calculateTA(customerType: String, priorDisposal: String, annualExemptAmount: Option[Double], otherPropertiesAmt: Option[Double], isVulnerable: Option[String],currentIncome: Option[Double],personalAllowanceAmt: Option[Double],disposalValue: Double,disposalCosts: Double,acquisitionValueAmt: Double,acquisitionCostsAmt: Double,improvementsAmt: Double,reliefs: Double,allowableLossesAmt: Double,acquisitionDate: Option[String], disposalDate: Option[String],isClaimingPRR: Option[String],daysClaimedAfter: Option[Double])

## Resident Calculation Routes
GET        /calculate-total-gain        controllers.resident.CalculatorController.calculateTotalGain(disposalValue: Double, disposalCosts: Double, acquisitionValue: Double, acquisitionCosts: Double, improvements: Double)
GET        /calculate-chargeable-gain   controllers.resident.CalculatorController.calculateChargeableGain(disposalValue: Double, disposalCosts: Double, acquisitionValue: Double, acquisitionCosts: Double, improvements: Double, reliefs: Option[Double], allowableLosses: Option[Double], broughtForwardLosses: Option[Double], annualExemptAmount: Double)
GET        /calculate-resident-capital-gains-tax    controllers.resident.CalculatorController.calculateTaxOwed(disposalValue: Double, disposalCosts: Double, acquisitionValue: Double, acquisitionCosts: Double, improvements: Double, reliefs: Option[Double], allowableLosses: Option[Double], broughtForwardLosses: Option[Double], annualExemptAmount: Double, previousTaxableGain: Option[Double], previousIncome: Double, personalAllowance: Double)

## Tax Rates and Bands Routes
GET        /tax-rates-and-bands/max-full-aea        controllers.TaxRatesAndBandsController.getMaxAEA(taxYear: Int)
GET        /tax-rates-and-bands/max-partial-aea     controllers.TaxRatesAndBandsController.getMaxNonVulnerableAEA(taxYear: Int)
GET        /tax-rates-and-bands/max-pa              controllers.TaxRatesAndBandsController.getMaxPersonalAllowance(taxYear: Int)
GET        /tax-year                                controllers.TaxRatesAndBandsController.getTaxYear(disposalDate: String)

